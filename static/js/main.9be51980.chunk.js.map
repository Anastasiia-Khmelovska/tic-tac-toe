{"version":3,"sources":["Square/Square.tsx","Board/Board.tsx","App.tsx","index.tsx"],"names":["Square","val","chooseSquare","changePlayer","onClick","className","classNames","firstPlayer","Board","useState","board","setBoard","player","setPlayer","winner","setWinner","game","setGame","setChangePlayer","tie","setTie","winConbination","square","map","ind","useEffect","forEach","currCombination","foundWinCombination","every","squ","setTimeout","alert","id","type","tieboard","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9be51980.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport classNames from 'classnames';\nimport React from 'react';\nimport './Square.scss';\n\ntype Props = {\n  val: string;\n  changePlayer: boolean;\n  chooseSquare: () => void;\n};\n\nexport const Square: React.FC<Props> = ({ val, chooseSquare, changePlayer }) => {\n  return (\n    <div\n      onClick={chooseSquare}\n      className={classNames('squareStyle', {\n        firstPlayer: changePlayer,\n      })}\n    >\n      {val}\n    </div>\n  );\n};\n","/* eslint-disable no-alert */\nimport classNames from 'classnames';\nimport React, { useState, useEffect } from 'react';\nimport { Square } from '../Square/Square';\nimport './Board.scss';\n\nexport const Board: React.FC = () => {\n  const [board, setBoard] = useState(['', '', '', '', '', '', '', '', '']);\n  const [player, setPlayer] = useState('O');\n  const [winner, setWinner] = useState('None');\n  const [game, setGame] = useState(true);\n  const [changePlayer, setChangePlayer] = useState(false);\n  const [tie, setTie] = useState(false);\n  const winConbination = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  const chooseSquare = (square: number) => {\n    if (!game) {\n      return;\n    }\n\n    setBoard(board.map((val, ind) => {\n      if (ind === square && val === '') {\n        return player;\n      }\n\n      return val;\n    }));\n  };\n\n  const handleReset = () => {\n    setBoard(['', '', '', '', '', '', '', '', '']);\n    setPlayer('O');\n    setWinner('None');\n    setGame(true);\n    setTie(false);\n  };\n\n  const checkWinner = () => {\n    winConbination.forEach((currCombination) => {\n      const firstPlayer = board[currCombination[0]];\n\n      if (firstPlayer === '') {\n        return;\n      }\n\n      let foundWinCombination = true;\n\n      currCombination.forEach((ind) => {\n        if (board[ind] !== firstPlayer) {\n          foundWinCombination = false;\n        }\n      });\n      if (foundWinCombination) {\n        setWinner(player);\n        setGame(false);\n      }\n    });\n  };\n\n  const checkTie = () => {\n    if (board.every((squ) => squ !== '')) {\n      setTie(true);\n      setWinner('No one');\n    }\n  };\n\n  useEffect(() => {\n    checkWinner();\n    checkTie();\n    if (player === 'X') {\n      setPlayer('O');\n      setChangePlayer(true);\n    } else {\n      setPlayer('X');\n      setChangePlayer(false);\n    }\n  }, [board]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (winner !== 'None') {\n        alert(`Game Finished! Winning player: ${winner}`);\n      }\n    }, 300);\n  });\n\n  return (\n    <div className=\"gameBoard containerStyle\">\n      <div id=\"statusArea\" className=\"status instructionsStyle\">\n        Next player:\n        {' '}\n        <span>{player}</span>\n      </div>\n      <div id=\"winnerArea\" className=\"winner instructionsStyle\">\n        Winner:\n        {' '}\n        <span>{winner}</span>\n      </div>\n      <button\n        type=\"submit\"\n        className=\"buttonStyle\"\n        onClick={handleReset}\n      >\n        Reset\n\n      </button>\n      <div className={classNames('boardStyle', {\n        tieboard: tie,\n      })}\n      >\n        <div className=\"board-row rowStyle\">\n          <Square\n            val={board[0]}\n            changePlayer={changePlayer}\n            chooseSquare={() => {\n              chooseSquare(0);\n            }}\n          />\n          <Square\n            val={board[1]}\n            changePlayer={changePlayer}\n            chooseSquare={() => {\n              chooseSquare(1);\n            }}\n          />\n          <Square\n            val={board[2]}\n            changePlayer={changePlayer}\n            chooseSquare={() => {\n              chooseSquare(2);\n            }}\n          />\n        </div>\n        <div className=\"board-row rowStyle\">\n          <Square\n            val={board[3]}\n            changePlayer={changePlayer}\n            chooseSquare={() => {\n              chooseSquare(3);\n            }}\n          />\n          <Square\n            val={board[4]}\n            changePlayer={changePlayer}\n            chooseSquare={() => {\n              chooseSquare(4);\n            }}\n          />\n          <Square\n            val={board[5]}\n            changePlayer={changePlayer}\n            chooseSquare={() => {\n              chooseSquare(5);\n            }}\n          />\n        </div>\n        <div className=\"board-row rowStyle\">\n          <Square\n            val={board[6]}\n            changePlayer={changePlayer}\n            chooseSquare={() => {\n              chooseSquare(6);\n            }}\n          />\n          <Square\n            val={board[7]}\n            changePlayer={changePlayer}\n            chooseSquare={() => {\n              chooseSquare(7);\n            }}\n          />\n          <Square\n            val={board[8]}\n            changePlayer={changePlayer}\n            chooseSquare={() => {\n              chooseSquare(8);\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Board } from './Board/Board';\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}